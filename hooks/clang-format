#!/usr/bin/env bash
# Wrapper script for clang-format
################################################################################
CMD="clang-format"
args=("$@")
get_script_dir () {
     SOURCE="${BASH_SOURCE[0]}"
     # While $SOURCE is a symlink, resolve it
     while [ -h "$SOURCE" ]; do
          DIR="$( cd -P "$( dirname "$SOURCE" )" > /dev/null && pwd )"
          SOURCE="$( readlink "$SOURCE" )"
          # If $SOURCE was a relative symlink (so no "/" as prefix, need to resolve it relative to the symlink base directory
          [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE"
     done
     DIR="$( cd -P "$( dirname "$SOURCE" )" > /dev/null && pwd )"
     echo "$DIR"
}
hook_dir="$(get_script_dir)"
. "$hook_dir/utils"


# Get the file argument if one exists. Assert version as necessary.
function parse_args {
	for arg in "${args[@]}"; do
		if [[ "$arg" == "--version="* ]]; then
			actual="$(clang-format --version | awk '{print $3}')"
			expected="$(echo "$arg" | cut -d '=' -f 2)"
			assert_version "$actual" "$expected"
		elif [ -e "$arg" ]; then
			filename="$arg"
		fi
	done

	if [ -z "$filename" ]; then
		echo "ERR: No file arg found. args =" "${args[@]}"
		exit 1
	fi
}


function clangformat_main {
	check_installed "$CMD"
	parse_args
	diff_formatted "${args[@]}" "$filename"
}

clangformat_main
